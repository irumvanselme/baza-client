{"ast":null,"code":"import _defineProperty from \"D:/Developments/anselme-dev/baza/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"D:/Developments/anselme-dev/baza/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Developments/anselme-dev/baza/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Developments\\\\anselme-dev\\\\baza\\\\client\\\\components\\\\Question\\\\Ask.jsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Validator from \"validatorjs\";\nimport { useRouter } from \"next/router\";\nimport TopicService from \"../../services/topic.service\";\nimport QuestionsService from \"../../services/questions.service\";\nimport { Snackbar } from \"../Reusable/Snackbar\";\nimport $ from \"jquery\";\nimport { isAuthed } from \"../../middlewares/auth\";\nexport function AskAQuestion(_ref) {\n  _s();\n\n  var _this = this;\n\n  var askNewQuestion = _ref.askNewQuestion;\n  var router = useRouter();\n  var topicContainer = useRef(null);\n  var titleContainer = useRef(null);\n  var descriptionContainer = useRef(null);\n\n  var _useState = useState({\n    open: false,\n    success: false,\n    message: \"You have successfully created an question\"\n  }),\n      snackBar = _useState[0],\n      setSnackbar = _useState[1];\n\n  var initalErrors = {\n    topic: [],\n    title: [],\n    body: []\n  };\n\n  var _useState2 = useState(initalErrors),\n      errors = _useState2[0],\n      setErrors = _useState2[1];\n\n  var _useState3 = useState([]),\n      topics = _useState3[0],\n      setTopics = _useState3[1];\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return TopicService.get_all();\n\n              case 2:\n                data = _context.sent;\n                setTopics(data.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchData().then();\n  }, []);\n\n  var getValue = function getValue(container) {\n    return container.current.value;\n  };\n\n  var handleClose = function handleClose() {\n    setSnackbar(_objectSpread(_objectSpread({}, snackBar), {}, {\n      open: false\n    }));\n  };\n\n  var submitForm = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n      var is_authed, question, valid, data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n              _context2.next = 3;\n              return isAuthed();\n\n            case 3:\n              is_authed = _context2.sent;\n\n              if (is_authed) {\n                _context2.next = 9;\n                break;\n              }\n\n              $(\"#askQuestion\").modal(\"hide\");\n              _context2.next = 8;\n              return router.push(\"/auth/login\");\n\n            case 8:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 9:\n              _context2.prev = 9;\n              question = {\n                topics: [getValue(topicContainer)],\n                title: getValue(titleContainer),\n                body: getValue(descriptionContainer)\n              };\n              valid = new Validator(question, {\n                topics: \"required|array\",\n                title: \"required|string|min:4\",\n                body: \"string|required|min:10\" // tags: \"string|min:8\"\n\n              });\n\n              if (!valid.fails(undefined)) {\n                _context2.next = 14;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", setErrors(_objectSpread(_objectSpread({}, initalErrors), valid.errors.all())));\n\n            case 14:\n              if (!valid.passes(undefined)) {\n                _context2.next = 21;\n                break;\n              }\n\n              setErrors(_objectSpread(_objectSpread({}, initalErrors), valid.errors.all()));\n              _context2.next = 18;\n              return QuestionsService.create(question);\n\n            case 18:\n              data = _context2.sent;\n              askNewQuestion(data.data);\n\n              if (data.status === 201) {\n                $(\"#askQuestion\").modal(\"hide\");\n                setSnackbar({\n                  open: true,\n                  success: true,\n                  message: \"You have successfully created a question\"\n                });\n              }\n\n            case 21:\n              _context2.next = 27;\n              break;\n\n            case 23:\n              _context2.prev = 23;\n              _context2.t0 = _context2[\"catch\"](9);\n\n              if (!(_context2.t0.response.status === 400)) {\n                _context2.next = 27;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", setErrors(_objectSpread(_objectSpread({}, initalErrors), _context2.t0.response.data)));\n\n            case 27:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[9, 23]]);\n    }));\n\n    return function submitForm(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade\",\n      id: \"askQuestion\",\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-lg modal-dialog-centered\",\n        role: \"document\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content card p-3 pt-4 px-sm-5\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"\",\n            onSubmit: submitForm,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between align-items-start\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"font-weight-bold py-2 pb-4\",\n                  children: \"Ask your question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"In\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-control font-weight-bolder border-0 \",\n                      ref: topicContainer,\n                      children: topics.map(function (topic, i) {\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: topic.name,\n                          children: topic.name\n                        }, i, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 116,\n                          columnNumber: 53\n                        }, _this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control \".concat(errors.title.length > 0 && \"is-invalid\", \"  _bg-light-gray\"),\n                placeholder: \"Eg: How much eggs can a hen lay at a time\",\n                ref: titleContainer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                children: errors.title[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mt-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"description\",\n                  className: \"font-weight-bold\",\n                  children: \"Explain your question (optional)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  name: \"\",\n                  id: \"description\",\n                  rows: 4,\n                  className: \"form-control \".concat(errors.body.length > 0 && \"is-invalid\", \"  _bg-light-gray\"),\n                  ref: descriptionContainer\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: errors.body[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-outline-info mx-4 px-4\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-outline-danger px-4\",\n                \"data-dismiss\": \"modal\",\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackBar.open,\n      success: snackBar.success,\n      counts: 3000,\n      message: snackBar.message,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AskAQuestion, \"XGRdgRQ1TiFz/BGZmKYfu34hN14=\", false, function () {\n  return [useRouter];\n});\n\n_c = AskAQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"AskAQuestion\");","map":{"version":3,"sources":["D:/Developments/anselme-dev/baza/client/components/Question/Ask.jsx"],"names":["React","useEffect","useRef","useState","Validator","useRouter","TopicService","QuestionsService","Snackbar","$","isAuthed","AskAQuestion","askNewQuestion","router","topicContainer","titleContainer","descriptionContainer","open","success","message","snackBar","setSnackbar","initalErrors","topic","title","body","errors","setErrors","topics","setTopics","fetchData","get_all","data","then","getValue","container","current","value","handleClose","submitForm","event","preventDefault","is_authed","modal","push","question","valid","fails","undefined","all","passes","create","status","response","map","i","name","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Validator from \"validatorjs\";\nimport { useRouter } from \"next/router\";\nimport TopicService from \"../../services/topic.service\";\nimport QuestionsService from \"../../services/questions.service\";\nimport { Snackbar } from \"../Reusable/Snackbar\";\nimport $ from \"jquery\";\nimport { isAuthed } from \"../../middlewares/auth\";\n\nexport function AskAQuestion({ askNewQuestion }) {\n    const router = useRouter();\n    const topicContainer = useRef(null);\n    const titleContainer = useRef(null);\n    const descriptionContainer = useRef(null);\n\n    const [snackBar, setSnackbar] = useState({\n        open: false,\n        success: false,\n        message: \"You have successfully created an question\",\n    });\n\n    const initalErrors = {\n        topic: [],\n        title: [],\n        body: [],\n    };\n\n    const [errors, setErrors] = useState(initalErrors);\n\n    const [topics, setTopics] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            let data = await TopicService.get_all();\n            setTopics(data.data);\n        };\n        fetchData().then();\n    }, []);\n\n    const getValue = (container) => container.current.value;\n\n    const handleClose = () => {\n        setSnackbar({ ...snackBar, open: false });\n    };\n\n    const submitForm = async (event) => {\n        event.preventDefault();\n        let is_authed = await isAuthed();\n        if (!is_authed) {\n            $(\"#askQuestion\").modal(\"hide\");\n            return await router.push(\"/auth/login\");\n        }\n        try {\n            const question = {\n                topics: [getValue(topicContainer)],\n                title: getValue(titleContainer),\n                body: getValue(descriptionContainer),\n            };\n\n            let valid = new Validator(question, {\n                topics: \"required|array\",\n                title: \"required|string|min:4\",\n                body: \"string|required|min:10\",\n                // tags: \"string|min:8\"\n            });\n\n            if (valid.fails(undefined))\n                return setErrors({ ...initalErrors, ...valid.errors.all() });\n\n            if (valid.passes(undefined)) {\n                setErrors({ ...initalErrors, ...valid.errors.all() });\n                let data = await QuestionsService.create(question);\n                askNewQuestion(data.data);\n                if (data.status === 201) {\n                    $(\"#askQuestion\").modal(\"hide\");\n                    setSnackbar({\n                        open: true,\n                        success: true,\n                        message: \"You have successfully created a question\",\n                    });\n                }\n            }\n        } catch (e) {\n            if (e.response.status === 400)\n                return setErrors({ ...initalErrors, ...e.response.data });\n        }\n    };\n\n    return (\n        <div>\n            <div\n                className=\"modal fade\"\n                id=\"askQuestion\"\n                tabIndex=\"-1\"\n                role=\"dialog\"\n            >\n                <div\n                    className=\"modal-dialog modal-lg modal-dialog-centered\"\n                    role=\"document\"\n                >\n                    <div className=\"modal-content card p-3 pt-4 px-sm-5\">\n                        <form action=\"\" onSubmit={submitForm}>\n                            <div className=\"pb-4\">\n                                <div className=\"d-flex justify-content-between align-items-start\">\n                                    <h4 className=\"font-weight-bold py-2 pb-4\">\n                                        Ask your question\n                                    </h4>\n                                    <div className=\"d-flex align-items-center\">\n                                        <div>In</div>\n                                        <div>\n                                            <select\n                                                className=\"form-control font-weight-bolder border-0 \"\n                                                ref={topicContainer}\n                                            >\n                                                {topics.map((topic, i) => (\n                                                    <option\n                                                        value={topic.name}\n                                                        key={i}\n                                                    >\n                                                        {topic.name}\n                                                    </option>\n                                                ))}\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                <input\n                                    type=\"text\"\n                                    className={`form-control ${\n                                        errors.title.length > 0 && \"is-invalid\"\n                                    }  _bg-light-gray`}\n                                    placeholder=\"Eg: How much eggs can a hen lay at a time\"\n                                    ref={titleContainer}\n                                />\n                                <div className=\"invalid-feedback\">\n                                    {errors.title[0]}\n                                </div>\n\n                                <div className=\"form-group mt-3\">\n                                    <label\n                                        htmlFor=\"description\"\n                                        className=\"font-weight-bold\"\n                                    >\n                                        Explain your question (optional)\n                                    </label>\n                                    <textarea\n                                        name=\"\"\n                                        id=\"description\"\n                                        rows={4}\n                                        className={`form-control ${\n                                            errors.body.length > 0 &&\n                                            \"is-invalid\"\n                                        }  _bg-light-gray`}\n                                        ref={descriptionContainer}\n                                    />\n                                    <div className=\"invalid-feedback\">\n                                        {errors.body[0]}\n                                    </div>\n                                </div>\n\n                                {/*<div className=\"form-group\">*/}\n                                {/*    <label htmlFor=\"tags\" className=\"font-weight-bold\">Tags</label>*/}\n                                {/*    <input name=\"\" id=\"tags\" className={`form-control ${ errors.tags.length > 0 && 'is-invalid' }  _bg-light-gray`} ref={ tagsContainer }/>*/}\n                                {/*    <div className=\"invalid-feedback\">{errors.tags[0]}</div>*/}\n                                {/*</div>*/}\n                            </div>\n                            <div className=\"text-right\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-outline-info mx-4 px-4\"\n                                >\n                                    Submit\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-outline-danger px-4\"\n                                    data-dismiss=\"modal\"\n                                >\n                                    Close\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <Snackbar\n                open={snackBar.open}\n                success={snackBar.success}\n                counts={3000}\n                message={snackBar.message}\n                handleClose={handleClose}\n            />\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}