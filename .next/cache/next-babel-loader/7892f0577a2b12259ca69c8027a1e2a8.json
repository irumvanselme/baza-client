{"ast":null,"code":"import _regeneratorRuntime from \"D:/Developments/anselme-dev/baza/client/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"D:/Developments/anselme-dev/baza/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"D:/Developments/anselme-dev/baza/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Developments\\\\anselme-dev\\\\baza\\\\client\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Question } from \"../components/Question\";\nimport QuestionsService from \"../services/questions.service\";\nimport { Welcome } from \"../components/Welcome\";\nimport PageLayout from \"../layouts/Page\";\nexport default function Home() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      questions = _useState[0],\n      setQuestions = _useState[1];\n\n  var _useState2 = useState(true),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      isOver = _useState3[0],\n      setIsOver = _useState3[1];\n\n  var _useState4 = useState(1),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState(false),\n      isFetching = _useState5[0],\n      setIsFetching = _useState5[1];\n\n  useEffect(function () {\n    window.addEventListener(\"scroll\", handleScroll);\n  }, []);\n  useEffect(function () {\n    if (!isFetching) return;\n    loadNewPosts().then();\n  }, [isFetching]);\n\n  function handleScroll() {\n    if (document.body.offsetHeight - (window.pageYOffset + window.innerHeight) > 500) return;\n    setIsFetching(true);\n  }\n\n  useEffect(function () {\n    var result = {},\n        paged = 1;\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _loop, _ret;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _loop = /*#__PURE__*/_regeneratorRuntime.mark(function _loop() {\n                var _yield$QuestionsServi, data;\n\n                return _regeneratorRuntime.wrap(function _loop$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return QuestionsService.feed(paged);\n\n                      case 2:\n                        _yield$QuestionsServi = _context.sent;\n                        data = _yield$QuestionsServi.data;\n\n                        if (data) {\n                          result = data;\n                          setQuestions(function (questions) {\n                            return [].concat(_toConsumableArray(questions), _toConsumableArray(data.data));\n                          });\n                          paged++;\n                          setPage(paged);\n                        }\n\n                        if (!(result.current_page === 4)) {\n                          _context.next = 7;\n                          break;\n                        }\n\n                        return _context.abrupt(\"return\", {\n                          v: setIsLoading(false)\n                        });\n\n                      case 7:\n                        if (data.current_page === data.last_page - 1) setIsOver(true);\n\n                      case 8:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _loop);\n              });\n\n            case 1:\n              return _context2.delegateYield(_loop(), \"t0\", 2);\n\n            case 2:\n              _ret = _context2.t0;\n\n              if (!(typeof _ret === \"object\")) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", _ret.v);\n\n            case 5:\n              if (result.current_page <= 3) {\n                _context2.next = 1;\n                break;\n              }\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, []); // useEffect(() => {\n  //     $(document).on(\"scroll\", async () => {\n  //         console.log(document.body.offsetHeight - (window.pageYOffset + window.innerHeight))\n  //         setTimeout(() => {\n  //\n  //         }, 3000)\n  //     })\n  // }, [])\n\n  var loadNewPosts = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$QuestionsServi2, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setIsFetching(true);\n              _context3.next = 3;\n              return QuestionsService.feed(page);\n\n            case 3:\n              _yield$QuestionsServi2 = _context3.sent;\n              data = _yield$QuestionsServi2.data;\n              setQuestions(function (questions) {\n                return [].concat(_toConsumableArray(questions), _toConsumableArray(data.data));\n              });\n              setPage(function (page) {\n                return page + 1;\n              });\n\n              if (data.current_page === data.last_page - 1) {\n                setIsOver(true);\n                setIsLoading(false);\n              }\n\n              setIsFetching(false);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadNewPosts() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(PageLayout, {\n    meta: {\n      title: \"baza | home-page\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), questions.map(function (question) {\n      return /*#__PURE__*/_jsxDEV(Question, {\n        question: question\n      }, question._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center pb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"No more posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"S5r/rBfi9Vb6uu+YOebYId1QzXk=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/Developments/anselme-dev/baza/client/pages/index.js"],"names":["React","useState","useEffect","Question","QuestionsService","Welcome","PageLayout","Home","questions","setQuestions","isLoading","setIsLoading","isOver","setIsOver","page","setPage","isFetching","setIsFetching","window","addEventListener","handleScroll","loadNewPosts","then","document","body","offsetHeight","pageYOffset","innerHeight","result","paged","feed","data","current_page","last_page","title","map","question","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Question } from \"../components/Question\";\r\nimport QuestionsService from \"../services/questions.service\";\r\nimport { Welcome } from \"../components/Welcome\";\r\nimport PageLayout from \"../layouts/Page\";\r\n\r\nexport default function Home() {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isOver, setIsOver] = useState(false);\r\n    const [page, setPage] = useState(1);\r\n    const [isFetching, setIsFetching] = useState(false)\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", handleScroll)\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (!isFetching) return;\r\n        loadNewPosts().then();\r\n    }, [isFetching])\r\n\r\n    function handleScroll() {\r\n        if (document.body.offsetHeight - (window.pageYOffset + window.innerHeight) > 500) return;\r\n            setIsFetching(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let result = {},\r\n            paged = 1;\r\n        (async () => {\r\n            do {\r\n                let { data } = await QuestionsService.feed(paged);\r\n                if (data) {\r\n                    result = data;\r\n                    setQuestions((questions) => [...questions, ...data.data]);\r\n                    paged++;\r\n                    setPage(paged);\r\n                }\r\n                if (result.current_page === 4) return setIsLoading(false);\r\n                if (data.current_page === data.last_page - 1) setIsOver(true);\r\n            } while (result.current_page <= 3);\r\n        })();\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     $(document).on(\"scroll\", async () => {\r\n    //         console.log(document.body.offsetHeight - (window.pageYOffset + window.innerHeight))\r\n    //         setTimeout(() => {\r\n    //\r\n    //         }, 3000)\r\n    //     })\r\n    // }, [])\r\n\r\n    const loadNewPosts = async () => {\r\n        setIsFetching(true)\r\n        let { data } = await QuestionsService.feed(page);\r\n        setQuestions((questions) => [...questions, ...data.data]);\r\n        setPage(page => page+1);\r\n        if (data.current_page === data.last_page - 1) {\r\n            setIsOver(true);\r\n            setIsLoading(false);\r\n        }\r\n        setIsFetching(false)\r\n    };\r\n\r\n    return (\r\n        <PageLayout meta={{ title: \"baza | home-page\" }}>\r\n            <Welcome />\r\n            {questions.map((question) => (\r\n                <Question key={question._id} question={question} />\r\n            ))}\r\n            <div className=\"text-center pb-5\">\r\n                <span>No more posts</span>\r\n            </div>\r\n        </PageLayout>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}