{"ast":null,"code":"import _regeneratorRuntime from \"D:/Developments/anselme-dev/baza/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Developments/anselme-dev/baza/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:/Developments/anselme-dev/baza/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Developments\\\\anselme-dev\\\\baza\\\\client\\\\components\\\\Question\\\\Answer.jsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef, useState } from \"react\";\nimport Validator from \"validatorjs\";\nimport { isAuthed } from \"../../middlewares/auth\";\nimport { useRouter } from \"next/router\";\nimport QuestionsService from \"../../services/questions.service\";\nimport $ from \"jquery\";\nimport { Snackbar } from \"../Reusable/Snackbar\";\nexport function AnswerAQuestion(_ref) {\n  _s();\n\n  var question = _ref.question,\n      answered = _ref.answered;\n  var router = useRouter();\n  var answerContainer = useRef(null);\n\n  var _useState = useState({\n    answer: []\n  }),\n      errors = _useState[0],\n      setErrors = _useState[1];\n\n  var getValue = function getValue(container) {\n    return container.current.value;\n  };\n\n  var _useState2 = useState({\n    open: false,\n    success: false,\n    message: \"You have successfully answered the question\"\n  }),\n      snackBar = _useState2[0],\n      setSnackbar = _useState2[1];\n\n  var handleClose = function handleClose() {\n    setSnackbar(_objectSpread(_objectSpread({}, snackBar), {}, {\n      open: false\n    }));\n  };\n\n  var submitForm = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var is_authed, answer, valid, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              _context.next = 3;\n              return isAuthed();\n\n            case 3:\n              is_authed = _context.sent;\n\n              if (is_authed) {\n                _context.next = 9;\n                break;\n              }\n\n              $(\"#answerQuestion\" + question).modal(\"hide\");\n              _context.next = 8;\n              return router.push(\"/auth/login\");\n\n            case 8:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 9:\n              answer = {\n                body: getValue(answerContainer)\n              };\n              answerContainer.current.value = \"\";\n              valid = new Validator(answer, {\n                body: \"required|string|min:4\"\n              });\n\n              if (!valid.fails(undefined)) {\n                _context.next = 14;\n                break;\n              }\n\n              return _context.abrupt(\"return\", setErrors(function (errors) {\n                return _objectSpread(_objectSpread({}, errors), valid.errors.all());\n              }));\n\n            case 14:\n              if (!valid.passes(undefined)) {\n                _context.next = 20;\n                break;\n              }\n\n              setErrors(function (errors) {\n                return _objectSpread(_objectSpread({}, errors), valid.errors.all());\n              });\n              _context.next = 18;\n              return QuestionsService.answer(question, answer);\n\n            case 18:\n              data = _context.sent;\n\n              if (data.status === 201) {\n                answered(data.data);\n                $(\"#answerQuestion\" + question).modal(\"hide\");\n                setSnackbar({\n                  open: true,\n                  success: true,\n                  message: \"You have successfully answered a question\"\n                });\n              }\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitForm(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade\",\n      id: \"answerQuestion\" + question,\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        role: \"document\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content py-4 px-lg-4\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"\",\n            onSubmit: submitForm,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"font-weight-bolder\",\n                children: \"Write Your answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mt-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                  name: \"answer\",\n                  id: \"description1\",\n                  rows: 5,\n                  ref: answerContainer,\n                  className: \"form-control \".concat(errors.answer.length > 0 && \"is-invalid\", \"  _bg-light-gray\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: errors.answer[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-outline-info mx-4 px-4\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-outline-danger px-4\",\n                \"data-dismiss\": \"modal\",\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackBar.open,\n      success: snackBar.success,\n      counts: 3000,\n      message: snackBar.message,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AnswerAQuestion, \"IqlZLgZhRDR5jdFhQMf/aYe83Go=\", false, function () {\n  return [useRouter];\n});\n\n_c = AnswerAQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnswerAQuestion\");","map":{"version":3,"sources":["D:/Developments/anselme-dev/baza/client/components/Question/Answer.jsx"],"names":["React","useRef","useState","Validator","isAuthed","useRouter","QuestionsService","$","Snackbar","AnswerAQuestion","question","answered","router","answerContainer","answer","errors","setErrors","getValue","container","current","value","open","success","message","snackBar","setSnackbar","handleClose","submitForm","event","preventDefault","is_authed","modal","push","body","valid","fails","undefined","all","passes","data","status","length"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport Validator from \"validatorjs\";\nimport { isAuthed } from \"../../middlewares/auth\";\nimport { useRouter } from \"next/router\";\nimport QuestionsService from \"../../services/questions.service\";\nimport $ from \"jquery\";\nimport { Snackbar } from \"../Reusable/Snackbar\";\n\nexport function AnswerAQuestion({ question, answered }) {\n    const router = useRouter();\n    const answerContainer = useRef(null);\n    const [errors, setErrors] = useState({ answer: [] });\n    const getValue = (container) => container.current.value;\n\n    const [snackBar, setSnackbar] = useState({\n        open: false,\n        success: false,\n        message: \"You have successfully answered the question\",\n    });\n\n    const handleClose = () => {\n        setSnackbar({ ...snackBar, open: false });\n    };\n\n    const submitForm = async (event) => {\n        event.preventDefault();\n\n        let is_authed = await isAuthed();\n        if (!is_authed) {\n            $(\"#answerQuestion\" + question).modal(\"hide\");\n            return await router.push(\"/auth/login\");\n        }\n\n        const answer = { body: getValue(answerContainer) };\n        answerContainer.current.value = \"\";\n\n        let valid = new Validator(answer, { body: \"required|string|min:4\" });\n\n        if (valid.fails(undefined))\n            return setErrors((errors) => {\n                return { ...errors, ...valid.errors.all() };\n            });\n\n        if (valid.passes(undefined)) {\n            setErrors((errors) => {\n                return { ...errors, ...valid.errors.all() };\n            });\n            let data = await QuestionsService.answer(question, answer);\n            if (data.status === 201) {\n                answered(data.data);\n                $(\"#answerQuestion\" + question).modal(\"hide\");\n                setSnackbar({\n                    open: true,\n                    success: true,\n                    message: \"You have successfully answered a question\",\n                });\n            }\n        }\n    };\n\n    return (\n        <div>\n            <div\n                className=\"modal fade\"\n                id={\"answerQuestion\" + question}\n                tabIndex=\"-1\"\n                role=\"dialog\"\n            >\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content py-4 px-lg-4\">\n                        <form action=\"\" onSubmit={submitForm}>\n                            <div>\n                                <h5 className=\"font-weight-bolder\">\n                                    Write Your answer\n                                </h5>\n                                <div className=\"form-group mt-3\">\n                                    <textarea\n                                        name=\"answer\"\n                                        id=\"description1\"\n                                        rows={5}\n                                        ref={answerContainer}\n                                        className={`form-control ${\n                                            errors.answer.length > 0 &&\n                                            \"is-invalid\"\n                                        }  _bg-light-gray`}\n                                    />\n                                    <div className=\"invalid-feedback\">\n                                        {errors.answer[0]}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"text-right\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-outline-info mx-4 px-4\"\n                                >\n                                    Submit\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-outline-danger px-4\"\n                                    data-dismiss=\"modal\"\n                                >\n                                    Close\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <Snackbar\n                open={snackBar.open}\n                success={snackBar.success}\n                counts={3000}\n                message={snackBar.message}\n                handleClose={handleClose}\n            />\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}