{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Developments\\\\anselme-dev\\\\baza\\\\client\\\\components\\\\Question\\\\Ask.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Validator from \"validatorjs\";\nimport { useRouter } from \"next/router\";\nimport TopicService from \"../../services/topic.service\";\nimport QuestionsService from \"../../services/questions.service\";\nimport { Snackbar } from \"../Reusable/Snackbar\";\nimport $ from \"jquery\";\nimport { isAuthed } from \"../../middlewares/auth\";\nexport function AskAQuestion({\n  askNewQuestion\n}) {\n  const router = useRouter();\n  const topicContainer = useRef(null);\n  const titleContainer = useRef(null);\n  const descriptionContainer = useRef(null);\n  const {\n    0: snackBar,\n    1: setSnackbar\n  } = useState({\n    open: false,\n    success: false,\n    message: \"You have successfully created an question\"\n  });\n  const initalErrors = {\n    topic: [],\n    title: [],\n    body: []\n  };\n  const {\n    0: errors,\n    1: setErrors\n  } = useState(initalErrors);\n  const {\n    0: topics,\n    1: setTopics\n  } = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      let data = await TopicService.get_all();\n      setTopics(data.data);\n    };\n\n    fetchData().then();\n  }, []);\n\n  const getValue = container => container.current.value;\n\n  const handleClose = () => {\n    setSnackbar(_objectSpread(_objectSpread({}, snackBar), {}, {\n      open: false\n    }));\n  };\n\n  const submitForm = async event => {\n    event.preventDefault();\n    let is_authed = await isAuthed();\n\n    if (!is_authed) {\n      $(\"#askQuestion\").modal(\"hide\");\n      return await router.push(\"/auth/login\");\n    }\n\n    try {\n      const question = {\n        topics: [getValue(topicContainer)],\n        title: getValue(titleContainer),\n        body: getValue(descriptionContainer)\n      };\n      let valid = new Validator(question, {\n        topics: \"required|array\",\n        title: \"required|string|min:4\",\n        body: \"string|required|min:10\" // tags: \"string|min:8\"\n\n      });\n      if (valid.fails(undefined)) return setErrors(_objectSpread(_objectSpread({}, initalErrors), valid.errors.all()));\n\n      if (valid.passes(undefined)) {\n        setErrors(_objectSpread(_objectSpread({}, initalErrors), valid.errors.all()));\n        let data = await QuestionsService.create(question);\n        askNewQuestion(data.data);\n\n        if (data.status === 201) {\n          $(\"#askQuestion\").modal(\"hide\");\n          setSnackbar({\n            open: true,\n            success: true,\n            message: \"You have successfully created a question\"\n          });\n        }\n      }\n    } catch (e) {\n      if (e.response.status === 400) return setErrors(_objectSpread(_objectSpread({}, initalErrors), e.response.data));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade\",\n      id: \"askQuestion\",\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-lg modal-dialog-centered\",\n        role: \"document\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content card p-3 pt-4 px-sm-5\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"\",\n            onSubmit: submitForm,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between align-items-start\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"font-weight-bold py-2 pb-4\",\n                  children: \"Ask your question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"In\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-control font-weight-bolder border-0 \",\n                      ref: topicContainer,\n                      children: topics.map((topic, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: topic.name,\n                        children: topic.name\n                      }, i, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 116,\n                        columnNumber: 53\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: `form-control ${errors.title.length > 0 && \"is-invalid\"}  _bg-light-gray`,\n                placeholder: \"Eg: How much eggs can a hen lay at a time\",\n                ref: titleContainer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                children: errors.title[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mt-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"description\",\n                  className: \"font-weight-bold\",\n                  children: \"Explain your question (optional)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  name: \"\",\n                  id: \"description\",\n                  rows: 4,\n                  className: `form-control ${errors.body.length > 0 && \"is-invalid\"}  _bg-light-gray`,\n                  ref: descriptionContainer\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: errors.body[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-outline-info mx-4 px-4\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-outline-danger px-4\",\n                \"data-dismiss\": \"modal\",\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackBar.open,\n      success: snackBar.success,\n      counts: 3000,\n      message: snackBar.message,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["D:/Developments/anselme-dev/baza/client/components/Question/Ask.jsx"],"names":["React","useEffect","useRef","useState","Validator","useRouter","TopicService","QuestionsService","Snackbar","$","isAuthed","AskAQuestion","askNewQuestion","router","topicContainer","titleContainer","descriptionContainer","snackBar","setSnackbar","open","success","message","initalErrors","topic","title","body","errors","setErrors","topics","setTopics","fetchData","data","get_all","then","getValue","container","current","value","handleClose","submitForm","event","preventDefault","is_authed","modal","push","question","valid","fails","undefined","all","passes","create","status","e","response","map","i","name","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Validator from \"validatorjs\";\nimport { useRouter } from \"next/router\";\nimport TopicService from \"../../services/topic.service\";\nimport QuestionsService from \"../../services/questions.service\";\nimport { Snackbar } from \"../Reusable/Snackbar\";\nimport $ from \"jquery\";\nimport { isAuthed } from \"../../middlewares/auth\";\n\nexport function AskAQuestion({ askNewQuestion }) {\n    const router = useRouter();\n    const topicContainer = useRef(null);\n    const titleContainer = useRef(null);\n    const descriptionContainer = useRef(null);\n\n    const [snackBar, setSnackbar] = useState({\n        open: false,\n        success: false,\n        message: \"You have successfully created an question\",\n    });\n\n    const initalErrors = {\n        topic: [],\n        title: [],\n        body: [],\n    };\n\n    const [errors, setErrors] = useState(initalErrors);\n\n    const [topics, setTopics] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            let data = await TopicService.get_all();\n            setTopics(data.data);\n        };\n        fetchData().then();\n    }, []);\n\n    const getValue = (container) => container.current.value;\n\n    const handleClose = () => {\n        setSnackbar({ ...snackBar, open: false });\n    };\n\n    const submitForm = async (event) => {\n        event.preventDefault();\n        let is_authed = await isAuthed();\n        if (!is_authed) {\n            $(\"#askQuestion\").modal(\"hide\");\n            return await router.push(\"/auth/login\");\n        }\n        try {\n            const question = {\n                topics: [getValue(topicContainer)],\n                title: getValue(titleContainer),\n                body: getValue(descriptionContainer),\n            };\n\n            let valid = new Validator(question, {\n                topics: \"required|array\",\n                title: \"required|string|min:4\",\n                body: \"string|required|min:10\",\n                // tags: \"string|min:8\"\n            });\n\n            if (valid.fails(undefined))\n                return setErrors({ ...initalErrors, ...valid.errors.all() });\n\n            if (valid.passes(undefined)) {\n                setErrors({ ...initalErrors, ...valid.errors.all() });\n                let data = await QuestionsService.create(question);\n                askNewQuestion(data.data);\n                if (data.status === 201) {\n                    $(\"#askQuestion\").modal(\"hide\");\n                    setSnackbar({\n                        open: true,\n                        success: true,\n                        message: \"You have successfully created a question\",\n                    });\n                }\n            }\n        } catch (e) {\n            if (e.response.status === 400)\n                return setErrors({ ...initalErrors, ...e.response.data });\n        }\n    };\n\n    return (\n        <div>\n            <div\n                className=\"modal fade\"\n                id=\"askQuestion\"\n                tabIndex=\"-1\"\n                role=\"dialog\"\n            >\n                <div\n                    className=\"modal-dialog modal-lg modal-dialog-centered\"\n                    role=\"document\"\n                >\n                    <div className=\"modal-content card p-3 pt-4 px-sm-5\">\n                        <form action=\"\" onSubmit={submitForm}>\n                            <div className=\"pb-4\">\n                                <div className=\"d-flex justify-content-between align-items-start\">\n                                    <h4 className=\"font-weight-bold py-2 pb-4\">\n                                        Ask your question\n                                    </h4>\n                                    <div className=\"d-flex align-items-center\">\n                                        <div>In</div>\n                                        <div>\n                                            <select\n                                                className=\"form-control font-weight-bolder border-0 \"\n                                                ref={topicContainer}\n                                            >\n                                                {topics.map((topic, i) => (\n                                                    <option\n                                                        value={topic.name}\n                                                        key={i}\n                                                    >\n                                                        {topic.name}\n                                                    </option>\n                                                ))}\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                <input\n                                    type=\"text\"\n                                    className={`form-control ${\n                                        errors.title.length > 0 && \"is-invalid\"\n                                    }  _bg-light-gray`}\n                                    placeholder=\"Eg: How much eggs can a hen lay at a time\"\n                                    ref={titleContainer}\n                                />\n                                <div className=\"invalid-feedback\">\n                                    {errors.title[0]}\n                                </div>\n\n                                <div className=\"form-group mt-3\">\n                                    <label\n                                        htmlFor=\"description\"\n                                        className=\"font-weight-bold\"\n                                    >\n                                        Explain your question (optional)\n                                    </label>\n                                    <textarea\n                                        name=\"\"\n                                        id=\"description\"\n                                        rows={4}\n                                        className={`form-control ${\n                                            errors.body.length > 0 &&\n                                            \"is-invalid\"\n                                        }  _bg-light-gray`}\n                                        ref={descriptionContainer}\n                                    />\n                                    <div className=\"invalid-feedback\">\n                                        {errors.body[0]}\n                                    </div>\n                                </div>\n\n                                {/*<div className=\"form-group\">*/}\n                                {/*    <label htmlFor=\"tags\" className=\"font-weight-bold\">Tags</label>*/}\n                                {/*    <input name=\"\" id=\"tags\" className={`form-control ${ errors.tags.length > 0 && 'is-invalid' }  _bg-light-gray`} ref={ tagsContainer }/>*/}\n                                {/*    <div className=\"invalid-feedback\">{errors.tags[0]}</div>*/}\n                                {/*</div>*/}\n                            </div>\n                            <div className=\"text-right\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-outline-info mx-4 px-4\"\n                                >\n                                    Submit\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-outline-danger px-4\"\n                                    data-dismiss=\"modal\"\n                                >\n                                    Close\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <Snackbar\n                open={snackBar.open}\n                success={snackBar.success}\n                counts={3000}\n                message={snackBar.message}\n                handleClose={handleClose}\n            />\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}