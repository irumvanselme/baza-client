{"ast":null,"code":"import _classCallCheck from \"D:/Developments/anselme-dev/baza/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/Developments/anselme-dev/baza/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/Developments/anselme-dev/baza/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:/Developments/anselme-dev/baza/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:/Developments/anselme-dev/baza/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Services } from \"./services\";\nimport { HttpCommon } from \"./http\";\n\nvar QuestionsService = /*#__PURE__*/function (_Services) {\n  _inherits(QuestionsService, _Services);\n\n  var _super = _createSuper(QuestionsService);\n\n  function QuestionsService() {\n    _classCallCheck(this, QuestionsService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(QuestionsService, [{\n    key: \"create\",\n    value: function create(question) {\n      return HttpCommon.post(\"/questions\", question);\n    }\n  }, {\n    key: \"search\",\n    value: function search(query) {\n      return HttpCommon.get(\"/questions/search?query=\" + query);\n    }\n  }, {\n    key: \"feed\",\n    value: function feed(page) {\n      return HttpCommon.get(\"/questions/feed?page=\" + page);\n    }\n  }, {\n    key: \"get\",\n    value: function get(question) {\n      return HttpCommon.get(\"/questions/\".concat(question));\n    }\n  }, {\n    key: \"with_likes\",\n    value: function with_likes() {\n      return HttpCommon.get(\"/questions/authed\");\n    }\n  }, {\n    key: \"get_all\",\n    value: function get_all() {\n      return HttpCommon.get(\"/questions\");\n    }\n  }, {\n    key: \"answer\",\n    value: function answer(question, _answer) {\n      return HttpCommon.post(\"/questions/\".concat(question, \"/answers\"), _answer);\n    }\n  }, {\n    key: \"answers\",\n    value: function answers(question) {\n      return HttpCommon.get(\"/questions/\".concat(question, \"/answers\"));\n    }\n  }, {\n    key: \"answers_with_auth\",\n    value: function answers_with_auth(question) {\n      return HttpCommon.get(\"/questions/\".concat(question, \"/answers/authed\"));\n    }\n  }, {\n    key: \"like\",\n    value: function like(question) {\n      return HttpCommon.post(\"/questions/\".concat(question, \"/like\"));\n    }\n  }, {\n    key: \"dislike\",\n    value: function dislike(question) {\n      return HttpCommon.post(\"/questions/\".concat(question, \"/dislike\"));\n    }\n  }, {\n    key: \"check_for_me\",\n    value: function check_for_me(question, type) {\n      return HttpCommon.get(\"/check-likes/q/\".concat(question, \"/\").concat(type));\n    }\n  }, {\n    key: \"trending\",\n    value: function trending() {\n      return HttpCommon.get(\"/questions/trending\");\n    }\n  }]);\n\n  return QuestionsService;\n}(Services);\n\nexport default new QuestionsService();","map":{"version":3,"sources":["D:/Developments/anselme-dev/baza/client/services/questions.service.js"],"names":["Services","HttpCommon","QuestionsService","question","post","query","get","page","answer","type"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,YAAzB;AACA,SAASC,UAAT,QAA2B,QAA3B;;IAEMC,gB;;;;;;;;;;;;;2BACKC,Q,EAAU;AACb,aAAOF,UAAU,CAACG,IAAX,CAAgB,YAAhB,EAA8BD,QAA9B,CAAP;AACH;;;2BAEME,K,EAAM;AACT,aAAOJ,UAAU,CAACK,GAAX,CAAe,6BAA2BD,KAA1C,CAAP;AACH;;;yBAEIE,I,EAAM;AACP,aAAON,UAAU,CAACK,GAAX,CAAe,0BAA0BC,IAAzC,CAAP;AACH;;;wBAEGJ,Q,EAAU;AACV,aAAOF,UAAU,CAACK,GAAX,sBAA6BH,QAA7B,EAAP;AACH;;;iCAEY;AACT,aAAOF,UAAU,CAACK,GAAX,CAAe,mBAAf,CAAP;AACH;;;8BAES;AACN,aAAOL,UAAU,CAACK,GAAX,CAAe,YAAf,CAAP;AACH;;;2BAEMH,Q,EAAUK,O,EAAQ;AACrB,aAAOP,UAAU,CAACG,IAAX,sBAA8BD,QAA9B,eAAkDK,OAAlD,CAAP;AACH;;;4BAEOL,Q,EAAU;AACd,aAAOF,UAAU,CAACK,GAAX,sBAA6BH,QAA7B,cAAP;AACH;;;sCAEiBA,Q,EAAU;AACxB,aAAOF,UAAU,CAACK,GAAX,sBAA6BH,QAA7B,qBAAP;AACH;;;yBAEIA,Q,EAAU;AACX,aAAOF,UAAU,CAACG,IAAX,sBAA8BD,QAA9B,WAAP;AACH;;;4BAEOA,Q,EAAU;AACd,aAAOF,UAAU,CAACG,IAAX,sBAA8BD,QAA9B,cAAP;AACH;;;iCAEYA,Q,EAAUM,I,EAAM;AACzB,aAAOR,UAAU,CAACK,GAAX,0BAAiCH,QAAjC,cAA6CM,IAA7C,EAAP;AACH;;;+BAEU;AACP,aAAOR,UAAU,CAACK,GAAX,CAAe,qBAAf,CAAP;AACH;;;;EAnD0BN,Q;;AAsD/B,eAAe,IAAIE,gBAAJ,EAAf","sourcesContent":["import { Services } from \"./services\";\nimport { HttpCommon } from \"./http\";\n\nclass QuestionsService extends Services {\n    create(question) {\n        return HttpCommon.post(\"/questions\", question);\n    }\n\n    search(query){\n        return HttpCommon.get(\"/questions/search?query=\"+query)\n    }\n\n    feed(page) {\n        return HttpCommon.get(\"/questions/feed?page=\" + page);\n    }\n\n    get(question) {\n        return HttpCommon.get(`/questions/${question}`);\n    }\n\n    with_likes() {\n        return HttpCommon.get(\"/questions/authed\");\n    }\n\n    get_all() {\n        return HttpCommon.get(\"/questions\");\n    }\n\n    answer(question, answer) {\n        return HttpCommon.post(`/questions/${question}/answers`, answer);\n    }\n\n    answers(question) {\n        return HttpCommon.get(`/questions/${question}/answers`);\n    }\n\n    answers_with_auth(question) {\n        return HttpCommon.get(`/questions/${question}/answers/authed`);\n    }\n\n    like(question) {\n        return HttpCommon.post(`/questions/${question}/like`);\n    }\n\n    dislike(question) {\n        return HttpCommon.post(`/questions/${question}/dislike`);\n    }\n\n    check_for_me(question, type) {\n        return HttpCommon.get(`/check-likes/q/${question}/${type}`);\n    }\n\n    trending() {\n        return HttpCommon.get(\"/questions/trending\");\n    }\n}\n\nexport default new QuestionsService();\n"]},"metadata":{},"sourceType":"module"}