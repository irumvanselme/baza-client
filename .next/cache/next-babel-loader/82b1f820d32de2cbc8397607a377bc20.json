{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Developments\\\\anselme-dev\\\\baza\\\\client\\\\components\\\\Question\\\\Answer.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useRef, useState } from \"react\";\nimport Validator from \"validatorjs\";\nimport { isAuthed } from \"../../middlewares/auth\";\nimport { useRouter } from \"next/router\";\nimport QuestionsService from \"../../services/questions.service\";\nimport $ from \"jquery\";\nimport { Snackbar } from \"../Reusable/Snackbar\";\nexport function AnswerAQuestion({\n  question,\n  answered\n}) {\n  const router = useRouter();\n  const answerContainer = useRef(null);\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({\n    answer: []\n  });\n\n  const getValue = container => container.current.value;\n\n  const {\n    0: snackBar,\n    1: setSnackbar\n  } = useState({\n    open: false,\n    success: false,\n    message: \"You have successfully answered the question\"\n  });\n\n  const handleClose = () => {\n    setSnackbar(_objectSpread(_objectSpread({}, snackBar), {}, {\n      open: false\n    }));\n  };\n\n  const submitForm = async event => {\n    event.preventDefault();\n    let is_authed = await isAuthed();\n\n    if (!is_authed) {\n      $(\"#answerQuestion\" + question).modal(\"hide\");\n      return await router.push(\"/auth/login\");\n    }\n\n    const answer = {\n      body: getValue(answerContainer)\n    };\n    answerContainer.current.value = \"\";\n    let valid = new Validator(answer, {\n      body: \"required|string|min:4\"\n    });\n    if (valid.fails(undefined)) return setErrors(errors => {\n      return _objectSpread(_objectSpread({}, errors), valid.errors.all());\n    });\n\n    if (valid.passes(undefined)) {\n      setErrors(errors => {\n        return _objectSpread(_objectSpread({}, errors), valid.errors.all());\n      });\n      let data = await QuestionsService.answer(question, answer);\n\n      if (data.status === 201) {\n        answered(data.data);\n        $(\"#answerQuestion\" + question).modal(\"hide\");\n        setSnackbar({\n          open: true,\n          success: true,\n          message: \"You have successfully answered a question\"\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade\",\n      id: \"answerQuestion\" + question,\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        role: \"document\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content py-4 px-lg-4\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"\",\n            onSubmit: submitForm,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"font-weight-bolder\",\n                children: \"Write Your answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mt-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                  name: \"answer\",\n                  id: \"description1\",\n                  rows: 5,\n                  ref: answerContainer,\n                  className: `form-control ${errors.answer.length > 0 && \"is-invalid\"}  _bg-light-gray`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: errors.answer[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-outline-info mx-4 px-4\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-outline-danger px-4\",\n                \"data-dismiss\": \"modal\",\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackBar.open,\n      success: snackBar.success,\n      counts: 3000,\n      message: snackBar.message,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["D:/Developments/anselme-dev/baza/client/components/Question/Answer.jsx"],"names":["React","useRef","useState","Validator","isAuthed","useRouter","QuestionsService","$","Snackbar","AnswerAQuestion","question","answered","router","answerContainer","errors","setErrors","answer","getValue","container","current","value","snackBar","setSnackbar","open","success","message","handleClose","submitForm","event","preventDefault","is_authed","modal","push","body","valid","fails","undefined","all","passes","data","status","length"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport Validator from \"validatorjs\";\nimport { isAuthed } from \"../../middlewares/auth\";\nimport { useRouter } from \"next/router\";\nimport QuestionsService from \"../../services/questions.service\";\nimport $ from \"jquery\";\nimport { Snackbar } from \"../Reusable/Snackbar\";\n\nexport function AnswerAQuestion({ question, answered }) {\n    const router = useRouter();\n    const answerContainer = useRef(null);\n    const [errors, setErrors] = useState({ answer: [] });\n    const getValue = (container) => container.current.value;\n\n    const [snackBar, setSnackbar] = useState({\n        open: false,\n        success: false,\n        message: \"You have successfully answered the question\",\n    });\n\n    const handleClose = () => {\n        setSnackbar({ ...snackBar, open: false });\n    };\n\n    const submitForm = async (event) => {\n        event.preventDefault();\n\n        let is_authed = await isAuthed();\n        if (!is_authed) {\n            $(\"#answerQuestion\" + question).modal(\"hide\");\n            return await router.push(\"/auth/login\");\n        }\n\n        const answer = { body: getValue(answerContainer) };\n        answerContainer.current.value = \"\";\n\n        let valid = new Validator(answer, { body: \"required|string|min:4\" });\n\n        if (valid.fails(undefined))\n            return setErrors((errors) => {\n                return { ...errors, ...valid.errors.all() };\n            });\n\n        if (valid.passes(undefined)) {\n            setErrors((errors) => {\n                return { ...errors, ...valid.errors.all() };\n            });\n            let data = await QuestionsService.answer(question, answer);\n            if (data.status === 201) {\n                answered(data.data);\n                $(\"#answerQuestion\" + question).modal(\"hide\");\n                setSnackbar({\n                    open: true,\n                    success: true,\n                    message: \"You have successfully answered a question\",\n                });\n            }\n        }\n    };\n\n    return (\n        <div>\n            <div\n                className=\"modal fade\"\n                id={\"answerQuestion\" + question}\n                tabIndex=\"-1\"\n                role=\"dialog\"\n            >\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content py-4 px-lg-4\">\n                        <form action=\"\" onSubmit={submitForm}>\n                            <div>\n                                <h5 className=\"font-weight-bolder\">\n                                    Write Your answer\n                                </h5>\n                                <div className=\"form-group mt-3\">\n                                    <textarea\n                                        name=\"answer\"\n                                        id=\"description1\"\n                                        rows={5}\n                                        ref={answerContainer}\n                                        className={`form-control ${\n                                            errors.answer.length > 0 &&\n                                            \"is-invalid\"\n                                        }  _bg-light-gray`}\n                                    />\n                                    <div className=\"invalid-feedback\">\n                                        {errors.answer[0]}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"text-right\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-outline-info mx-4 px-4\"\n                                >\n                                    Submit\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-outline-danger px-4\"\n                                    data-dismiss=\"modal\"\n                                >\n                                    Close\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <Snackbar\n                open={snackBar.open}\n                success={snackBar.success}\n                counts={3000}\n                message={snackBar.message}\n                handleClose={handleClose}\n            />\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}