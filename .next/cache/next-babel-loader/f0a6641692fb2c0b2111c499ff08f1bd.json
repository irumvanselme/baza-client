{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Developments\\\\anselme-dev\\\\baza\\\\client\\\\pages\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Question } from \"../components/Question\";\nimport QuestionsService from \"../services/questions.service\";\nimport { Welcome } from \"../components/Welcome\";\nimport PageLayout from \"../layouts/Page\";\nexport default function Home() {\n  const {\n    0: questions,\n    1: setQuestions\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const {\n    0: isOver,\n    1: setIsOver\n  } = useState(false);\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n  const {\n    0: isFetching,\n    1: setIsFetching\n  } = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n  }, []);\n  useEffect(() => {\n    if (!isFetching) return;\n    loadNewPosts().then();\n  }, [isFetching]);\n\n  function handleScroll() {\n    if (document.body.offsetHeight - (window.pageYOffset + window.innerHeight) > 500) return;\n    setIsFetching(true);\n  }\n\n  useEffect(() => {\n    let result = {},\n        paged = 1;\n\n    (async () => {\n      do {\n        let {\n          data\n        } = await QuestionsService.feed(paged);\n\n        if (data) {\n          result = data;\n          setQuestions(questions => [...questions, ...data.data]);\n          paged++;\n          setPage(paged);\n        }\n\n        if (result.current_page === 4) return setIsLoading(false);\n        if (data.current_page === data.last_page - 1) setIsOver(true);\n      } while (result.current_page <= 3);\n    })();\n  }, []); // useEffect(() => {\n  //     $(document).on(\"scroll\", async () => {\n  //         console.log(document.body.offsetHeight - (window.pageYOffset + window.innerHeight))\n  //         setTimeout(() => {\n  //\n  //         }, 3000)\n  //     })\n  // }, [])\n\n  const loadNewPosts = async () => {\n    setIsFetching(true);\n    let {\n      data\n    } = await QuestionsService.feed(page);\n    setQuestions(questions => [...questions, ...data.data]);\n    setPage(page => page + 1);\n\n    if (data.current_page === data.last_page - 1) {\n      setIsOver(true);\n      setIsLoading(false);\n    }\n\n    setIsFetching(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageLayout, {\n    meta: {\n      title: \"baza | home-page\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), questions.map(question => /*#__PURE__*/_jsxDEV(Question, {\n      question: question\n    }, question._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center pb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"No more posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["D:/Developments/anselme-dev/baza/client/pages/index.js"],"names":["React","useState","useEffect","Question","QuestionsService","Welcome","PageLayout","Home","questions","setQuestions","isLoading","setIsLoading","isOver","setIsOver","page","setPage","isFetching","setIsFetching","window","addEventListener","handleScroll","loadNewPosts","then","document","body","offsetHeight","pageYOffset","innerHeight","result","paged","data","feed","current_page","last_page","title","map","question","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Question } from \"../components/Question\";\r\nimport QuestionsService from \"../services/questions.service\";\r\nimport { Welcome } from \"../components/Welcome\";\r\nimport PageLayout from \"../layouts/Page\";\r\n\r\nexport default function Home() {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isOver, setIsOver] = useState(false);\r\n    const [page, setPage] = useState(1);\r\n    const [isFetching, setIsFetching] = useState(false)\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", handleScroll)\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (!isFetching) return;\r\n        loadNewPosts().then();\r\n    }, [isFetching])\r\n\r\n    function handleScroll() {\r\n        if (document.body.offsetHeight - (window.pageYOffset + window.innerHeight) > 500) return;\r\n            setIsFetching(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let result = {},\r\n            paged = 1;\r\n        (async () => {\r\n            do {\r\n                let { data } = await QuestionsService.feed(paged);\r\n                if (data) {\r\n                    result = data;\r\n                    setQuestions((questions) => [...questions, ...data.data]);\r\n                    paged++;\r\n                    setPage(paged);\r\n                }\r\n                if (result.current_page === 4) return setIsLoading(false);\r\n                if (data.current_page === data.last_page - 1) setIsOver(true);\r\n            } while (result.current_page <= 3);\r\n        })();\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     $(document).on(\"scroll\", async () => {\r\n    //         console.log(document.body.offsetHeight - (window.pageYOffset + window.innerHeight))\r\n    //         setTimeout(() => {\r\n    //\r\n    //         }, 3000)\r\n    //     })\r\n    // }, [])\r\n\r\n    const loadNewPosts = async () => {\r\n        setIsFetching(true)\r\n        let { data } = await QuestionsService.feed(page);\r\n        setQuestions((questions) => [...questions, ...data.data]);\r\n        setPage(page => page+1);\r\n        if (data.current_page === data.last_page - 1) {\r\n            setIsOver(true);\r\n            setIsLoading(false);\r\n        }\r\n        setIsFetching(false)\r\n    };\r\n\r\n    return (\r\n        <PageLayout meta={{ title: \"baza | home-page\" }}>\r\n            <Welcome />\r\n            {questions.map((question) => (\r\n                <Question key={question._id} question={question} />\r\n            ))}\r\n            <div className=\"text-center pb-5\">\r\n                <span>No more posts</span>\r\n            </div>\r\n        </PageLayout>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}