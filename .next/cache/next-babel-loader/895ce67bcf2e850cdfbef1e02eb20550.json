{"ast":null,"code":"import _regeneratorRuntime from \"D:/Developments/anselme-dev/baza/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Developments/anselme-dev/baza/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport AuthService from \"../services/auth.service\";\nexport function isAuthed() {\n  return _isAuthed.apply(this, arguments);\n}\n\nfunction _isAuthed() {\n  _isAuthed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var token, profile;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            token = sessionStorage.getItem(\"token\");\n\n            if (token) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 3:\n            _context.next = 5;\n            return AuthService.profile();\n\n          case 5:\n            profile = _context.sent;\n            return _context.abrupt(\"return\", profile.data._id);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _isAuthed.apply(this, arguments);\n}","map":{"version":3,"sources":["D:/Developments/anselme-dev/baza/client/middlewares/auth.js"],"names":["AuthService","isAuthed","token","sessionStorage","getItem","profile","data","_id"],"mappings":";;AAAA,OAAOA,WAAP,MAAwB,0BAAxB;AAEA,gBAAsBC,QAAtB;AAAA;AAAA;;;uEAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AACGC,YAAAA,KADH,GACWC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CADX;;AAAA,gBAEEF,KAFF;AAAA;AAAA;AAAA;;AAAA,6CAEgB,KAFhB;;AAAA;AAAA;AAAA,mBAGiBF,WAAW,CAACK,OAAZ,EAHjB;;AAAA;AAGCA,YAAAA,OAHD;AAAA,6CAIIA,OAAO,CAACC,IAAR,CAAaC,GAJjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import AuthService from \"../services/auth.service\";\n\nexport async function isAuthed() {\n    const token = sessionStorage.getItem(\"token\");\n    if (!token) return false;\n    let profile = await AuthService.profile();\n    return profile.data._id;\n}\n"]},"metadata":{},"sourceType":"module"}